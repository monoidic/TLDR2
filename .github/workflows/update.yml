name: Update

on:
  workflow_dispatch:
  schedule:
  - cron: "40 * * * *"

jobs:
  prework:
    name: Prework
    runs-on: ubuntu-latest
    outputs:
        walkable: ${{steps.walkable.outputs.walkable}}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - uses: actions/setup-go@v4
      with:
        cache-dependency-path: dns-tools/go.sum
    - run: success=0; for i in {1..3}; do timeout 60 sudo sh -c 'apt update && apt install jq ldnsutils sqlite3' && { success=1; break; } || { sudo rm /var/lib/apt/lists/lock /var/cache/apt/archives/lock; sudo find /var/lib/dpkg -maxdepth 1 -name 'lock*' -delete; sudo dpkg --configure -a } ; done; [[ $success == 1 ]] || exit 1
    - run: go install github.com/monoidic/dns-tools@latest
    - run: ./scan.sh prework
    - run: ./scan.sh walkable
    - id: walkable
      run: printf 'walkable=%s\n' $(./scan.sh get_walkable | grep -vf <(grep -v '^#' filters.txt | sed '/^$/d') | jq -Rsc 'split("\n") | .[:-1]') | tee -a "$GITHUB_OUTPUT"
    - uses: actions/upload-artifact@v4
      with:
          name: db
          path: tldr.sqlite3
          retention-days: 1

  axfr:
    name: Zone transfer
    runs-on: ubuntu-latest
    needs: prework
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - uses: actions/setup-go@v4
      with:
        cache-dependency-path: dns-tools/go.sum
    - run: success=0; for i in {1..3}; do timeout 60 sudo sh -c 'apt update && apt install jq ldnsutils sqlite3' && { success=1; break; } || { sudo rm /var/lib/apt/lists/lock /var/cache/apt/archives/lock; sudo find /var/lib/dpkg -maxdepth 1 -name 'lock*' -delete; sudo dpkg --configure -a } ; done; [[ $success == 1 ]] || exit 1
    - run: go install github.com/monoidic/dns-tools@latest
    - uses: actions/download-artifact@v4
      with:
        name: db
    - run: ./scan.sh axfr
    - run: ./scan.sh zonefiles
    - run: ./scan.sh md_axfr
    - run: ./scan.sh md_walkable
    - run: git config user.name github-actions && git config user.email github-actions[bot]@users.noreply.github.com
    - run: git pull
    - run: git add transferable_zones.md walkable_zones.md archives/
    - run: git commit -m 'Updating zone information' || true
    - run: git push

  zone_walk:
    name: Zone walks
    runs-on: ubuntu-latest
    needs: prework
    strategy:
        matrix:
            tld: ${{ fromJson(needs.prework.outputs.walkable) }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - uses: actions/setup-go@v4
      with:
        cache-dependency-path: dns-tools/go.sum
    - run: success=0; for i in {1..3}; do timeout 60 sudo sh -c 'apt update && apt install jq ldnsutils sqlite3' && { success=1; break; } || { sudo rm /var/lib/apt/lists/lock /var/cache/apt/archives/lock; sudo find /var/lib/dpkg -maxdepth 1 -name 'lock*' -delete; sudo dpkg --configure -a } ; done; [[ $success == 1 ]] || exit 1
    - run: go install github.com/monoidic/dns-tools@latest
    - uses: actions/download-artifact@v4
      with:
          name: db
    - run: ./scan.sh walk ${{matrix.tld}}
    - run: mv walk_lists/${{matrix.tld}}list walk_lists/${{matrix.tld}}list.bak
    - run: git restore walk_lists/${{matrix.tld}}list || true
    - run: git pull
    - run: mv walk_lists/${{matrix.tld}}list.bak walk_lists/${{matrix.tld}}list
    - run: git add walk_lists
    - run: git diff --cached > ${{matrix.tld}}patch
    - uses: actions/upload-artifact@v4
      with:
        path: ${{matrix.tld}}patch
        name: ${{matrix.tld}}patch
        retention-days: 1

  walked:
    name: Collect zone walking
    runs-on: ubuntu-latest
    needs: zone_walk
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v4
      with:
        path: artifacts
    - run: git pull
    - run: for file in artifacts/*/*.patch; do patch -p1 < $file; done
    - run: find walk_lists -type f -empty -exec git restore '{}' ';'
    - run: git add walk_lists
    - run: git config user.name github-actions && git config user.email github-actions[bot]@users.noreply.github.com
    - run: git commit -m 'Updating walks' || true
    - run: git push
